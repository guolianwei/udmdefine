openapi: 3.0.0
info:
  title: 数据源列表接口
  version: 1.0.0
paths:
  /v1/model/save:
    post:
      summary: 保存数据模型
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 参数错误
        '500':
          description: 服务器错误
  /v1/model/update:
    post:
      summary: 更新数据模型
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Model'
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 参数错误
        '500':
          description: 服务器错误
  /v1/model/category/update:
    post:
      summary: 更新模型分类
      parameters:
        - name: loginUserId
          in: query
          description: 登录用户ID
          required: true
          schema:
            type: string
        - name: modelId
          in: query
          description: 模型ID
          required: false
          schema:
            type: string
        - name: categoryId
          in: query
          description: 模型分类ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 参数错误
        '500':
          description: 服务器错误
  /v1/model/delete:
    post:
      summary: 更新模型分类
      parameters:
        - name: loginUserId
          in: query
          description: 登录用户ID
          required: true
          schema:
            type: string
        - name: modeIds
          in: query
          description: 返回模式
          schema:
            type: array
            items:
              type: string
          style: form
          explode: false
      responses:
        '200':
          description: 操作成功
          content:
            application/json:
              schema:
                type: boolean
        '400':
          description: 参数错误
        '500':
          description: 服务器错误
  /v1/model/list:
    get:
      summary: 获取数据源列表
      parameters:
        - name: loginUserId
          in: query
          description: 登录用户ID
          required: true
          schema:
            type: string
        - name: dsType
          in: query
          description: 数据源类型
          required: false
          schema:
            type: string
        - name: dsId
          in: query
          description: 数据源ID
          required: false
          schema:
            type: string
        - name: modelName
          in: query
          description: 模型名称
          required: false
          schema:
            type: string
        - name: categoryId
          in: query
          description: 类别ID
          required: false
          schema:
            type: string
      responses:
        '200':
          description: 成功返回数据源列表
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Model'
        '400':
          description: 请求参数错误
        '401':
          description: 未授权访问
        '500':
          description: 服务器内部错误
  /v1/model/get:
    get:
      summary: 查询单个模型，1.字段列表：带分页；2.模型及字段信息：全部模型属性;3.模型基本信息：一部分模型信息。
      parameters:
        - name: loginUserId
          in: query
          description: 用户登录名 pf_org_user 的 USER_ID
          required: true
          schema:
            type: string
        - name: modelId
          in: query
          description: 模型ID
          required: true
          schema:
            type: string
        - name: code
          in: query
          description: 模型编码
          required: true
          schema:
            type: string
        - name: mode
          in: query
          description: 返回模式
          required: false
          schema:
            type: string
            enum: [ simple, all ]
      responses:
        '200':
          description: 查询成功
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/BaseModel'
                  - $ref:  '#/components/schemas/Model'

        '400':
          description: 查询失败
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: 错误信息
components:
  schemas:
    BaseModel:
      type: object
      properties:
        id:
          type: string
          description: 模型ID
        name:
          type: string
          description: 模型名称
        code:
          type: string
          description: 模型编码
        status:
          $ref: '#/components/schemas/ModelVersionStatus'
          description: 版本状态
        editingStatusTableName:
          type: string
          description: 编辑中状态表名
        categoryId:
          type: string
          description: 类别ID
    Model:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        categoryId:
          type: string
        isPublished:
          $ref: '#/components/schemas/PublishState'
        firstPublishTime:
          type: string
        createUser:
          type: string
        createTime:
          type: string
        createDept:
          type: string
        modifyUser:
          type: string
        modifyTime:
          type: string
        modifyDept:
          type: string
        dataBaseId:
          type: string
        databaseSchema:
          type: string
        createMode:
          $ref: '#/components/schemas/CreateMode'
        manageContentScope:
          $ref: '#/components/schemas/ManageContentScope'
        isManageVersion:
          $ref: '#/components/schemas/WhetherValue'
        version:
          type: string
        status:
          $ref: '#/components/schemas/ModelVersionStatus'
        editingStatusTableName:
          type: string
        publishedStatusTableName:
          type: string
        publishTime:
          type: string
        isMaxVersion:
          $ref: '#/components/schemas/WhetherValue'
        secretsLevel:
          type: string
        fields:
          type: array
          items:
            $ref: '#/components/schemas/Field'
        modelInfo:
          type: string
        levelCode:
          type: string
    ManageContentScope:
      type: integer
      enum: [0, 1, 2, 3]
      description: |
        0 - 仅查询数据
        1 - 仅管理表结构
        2 - 仅管理数据
        3 - 管理表结构和数据
    PublishState:
      type: integer
      enum: [0, 1]
      description: |
        0 - 未发布
        1 - 已发布
    CreateMode:
      type: integer
      enum: [0, 1, 2]
      description: |
        0 - 新建
        1 - 抽取
        2 - ETL输出
    ModelVersionStatus:
      type: integer
      enum: [0, 1, 2, 3, 4]
      description: |
        0 - 停用
        1 - 生效
        2 - 编辑中
        3 - 审核中
        4 - 历史
    Field:
      type: object
      properties:
        id:
          type: string
        businessName:
          type: string
        fieldName:
          type: string
        dataType:
          type: string
        length:
          type: string
        sortNumber:
          type: string
        modifyStatus:
          $ref: '#/components/schemas/ModifyStatus'
        publishName:
          type: string
        modifyUser:
          type: string
        modifyTime:
          type: string
        modifyDept:
          type: string
        usingCharacterType:
          $ref: '#/components/schemas/UsingCharacterTypes'
        modelVersionId:
          type: string
        modelFieldId:
          type: string
        isUnique:
          $ref: '#/components/schemas/WhetherValue'
        status:
          $ref: '#/components/schemas/FieldStatus'
        unsigned:
          $ref: '#/components/schemas/SignRestriction'
        definition:
          type: integer
        fieldDataType:
          $ref: '#/components/schemas/FieldDataType'
    ModifyStatus:
      type: integer
      enum: [0, 1]
      description: |
        0 - 新增
        1 - 更新
    FieldStatus:
      type: integer
      enum: [0, 1]
      description: |
        0 - 停用
        1 - 启用
    SignRestriction:
      type: integer
      enum: [0, 1, -1]
      description: |
        0 - 无
        1 - 有
        -1 - 其他
    FieldDataType:
      type: object
      properties:
        id:
          type: string
        databaseType:
          type: string
        dataType:
          type: string
        needLength:
          $ref: '#/components/schemas/WhetherValue'
        defaultLength:
          type: integer
        maxLength:
          type: integer
        minLength:
          type: integer
        needCharUsed:
          $ref: '#/components/schemas/WhetherValue'
        defaultCharUsed:
          type: string
        needDefinition:
          type: integer
        defaultDefinition:
          type: integer
        maxDefinition:
          type: integer
        minDefinition:
          type: integer
        needIsUnsigned:
          $ref: '#/components/schemas/WhetherValue'
        busiType:
          type: string
        dateFormat:
          type: string
        supportVersion:
          type: string
        deprecatedVersion:
          type: string
        versionDes:
          $ref: '#/components/schemas/VersionDes'
        replaceDataType:
          type: string
        extract:
          $ref: '#/components/schemas/WhetherValue'
        create:
          $ref: '#/components/schemas/TrietherValue'
        allowedSetUnique:
          $ref: '#/components/schemas/WhetherValue'
    WhetherValue:
      type: integer
      enum: [0, 1]
      description: |
        0 - 否
        1 - 是
    VersionDes:
      type: string
      enum: ["L", "R"]
      description: |
        L - list
        R - range
    UsingCharacterTypes:
      type: integer
      enum: [0, 1, 2]
      description: |
        0 - 字符
        1 - 字节
        2 - 其他
    TrietherValue:
      type: integer
      enum: [0, 1, -1]
      description: |
        0 - 否 | 无
        1 - 是 | 有
        -1 - 未定义 | 其他